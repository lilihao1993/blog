<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ldsh.blog.system.mapper.AdminUserMapper" >
  <resultMap id="BaseResultMap" type="com.ldsh.blog.system.model.AdminUser" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="BAU_USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="BAU_PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="BAU_NAME" property="name" jdbcType="VARCHAR" />
    <result column="BAU_SEX" property="sex" jdbcType="CHAR" />
    <result column="BAU_ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="BAU_DIRTHDAY" property="dirthday" jdbcType="TIMESTAMP" />
    <result column="BAU_MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="BAU_MAIL" property="mail" jdbcType="VARCHAR" />
    <result column="BAU_WECHAT" property="wechat" jdbcType="VARCHAR" />
    <result column="BAU_SKETCH" property="sketch" jdbcType="VARCHAR" />
    <result column="BAU_STATUS" property="status" jdbcType="CHAR" />
    <result column="BAU_ENCRYPT_SALT" property="encryptSalt" jdbcType="VARCHAR" />
    <result column="BAU_CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="BAU_OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="BAU_ACTIVATE_TIME" property="activateTime" jdbcType="TIMESTAMP" />
    <result column="BAU_PASSWORD_MODIFY_TIME" property="passwordModifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
    -->
    ID, BAU_USER_NAME, BAU_PASSWORD, BAU_NAME, BAU_SEX, BAU_ADDRESS, BAU_DIRTHDAY, BAU_MOBILE, 
    BAU_MAIL, BAU_WECHAT, BAU_SKETCH, BAU_STATUS, BAU_ENCRYPT_SALT, BAU_CREATE_TIME, 
    BAU_OPERATE_TIME, BAU_ACTIVATE_TIME, BAU_PASSWORD_MODIFY_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ldsh.blog.system.model.AdminUserExample" >
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from blog_admin_user
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from blog_admin_user
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ldsh.blog.system.model.AdminUserExample" >
    <!--
      WARNING - @mbggenerated
    -->
    delete from blog_admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ldsh.blog.system.model.AdminUser" >
    <!--
      WARNING - @mbggenerated
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      select replace(uuid(), '-', '')
    </selectKey>
    insert into blog_admin_user (ID, BAU_USER_NAME, BAU_PASSWORD, 
      BAU_NAME, BAU_SEX, BAU_ADDRESS, BAU_DIRTHDAY, 
      BAU_MOBILE, BAU_MAIL, BAU_WECHAT, 
      BAU_SKETCH, BAU_STATUS, BAU_ENCRYPT_SALT, 
      BAU_CREATE_TIME, BAU_OPERATE_TIME, BAU_ACTIVATE_TIME, 
      BAU_PASSWORD_MODIFY_TIME)
    values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{dirthday,jdbcType=TIMESTAMP}, 
      #{mobile,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{sketch,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{encryptSalt,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=TIMESTAMP}, #{activateTime,jdbcType=TIMESTAMP}, 
      #{passwordModifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ldsh.blog.system.model.AdminUser" >
    <!--
      WARNING - @mbggenerated
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      select replace(uuid(), '-', '')
    </selectKey>
    insert into blog_admin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="userName != null" >
        BAU_USER_NAME,
      </if>
      <if test="password != null" >
        BAU_PASSWORD,
      </if>
      <if test="name != null" >
        BAU_NAME,
      </if>
      <if test="sex != null" >
        BAU_SEX,
      </if>
      <if test="address != null" >
        BAU_ADDRESS,
      </if>
      <if test="dirthday != null" >
        BAU_DIRTHDAY,
      </if>
      <if test="mobile != null" >
        BAU_MOBILE,
      </if>
      <if test="mail != null" >
        BAU_MAIL,
      </if>
      <if test="wechat != null" >
        BAU_WECHAT,
      </if>
      <if test="sketch != null" >
        BAU_SKETCH,
      </if>
      <if test="status != null" >
        BAU_STATUS,
      </if>
      <if test="encryptSalt != null" >
        BAU_ENCRYPT_SALT,
      </if>
      <if test="createTime != null" >
        BAU_CREATE_TIME,
      </if>
      <if test="operateTime != null" >
        BAU_OPERATE_TIME,
      </if>
      <if test="activateTime != null" >
        BAU_ACTIVATE_TIME,
      </if>
      <if test="passwordModifyTime != null" >
        BAU_PASSWORD_MODIFY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="dirthday != null" >
        #{dirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null" >
        #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="encryptSalt != null" >
        #{encryptSalt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activateTime != null" >
        #{activateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordModifyTime != null" >
        #{passwordModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ldsh.blog.system.model.AdminUserExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from blog_admin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update blog_admin_user
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        BAU_USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        BAU_PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        BAU_NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        BAU_SEX = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.address != null" >
        BAU_ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.dirthday != null" >
        BAU_DIRTHDAY = #{record.dirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null" >
        BAU_MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        BAU_MAIL = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null" >
        BAU_WECHAT = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.sketch != null" >
        BAU_SKETCH = #{record.sketch,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        BAU_STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.encryptSalt != null" >
        BAU_ENCRYPT_SALT = #{record.encryptSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        BAU_CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operateTime != null" >
        BAU_OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.activateTime != null" >
        BAU_ACTIVATE_TIME = #{record.activateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passwordModifyTime != null" >
        BAU_PASSWORD_MODIFY_TIME = #{record.passwordModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
    -->
    update blog_admin_user
    set ID = #{record.id,jdbcType=VARCHAR},
      BAU_USER_NAME = #{record.userName,jdbcType=VARCHAR},
      BAU_PASSWORD = #{record.password,jdbcType=VARCHAR},
      BAU_NAME = #{record.name,jdbcType=VARCHAR},
      BAU_SEX = #{record.sex,jdbcType=CHAR},
      BAU_ADDRESS = #{record.address,jdbcType=VARCHAR},
      BAU_DIRTHDAY = #{record.dirthday,jdbcType=TIMESTAMP},
      BAU_MOBILE = #{record.mobile,jdbcType=VARCHAR},
      BAU_MAIL = #{record.mail,jdbcType=VARCHAR},
      BAU_WECHAT = #{record.wechat,jdbcType=VARCHAR},
      BAU_SKETCH = #{record.sketch,jdbcType=VARCHAR},
      BAU_STATUS = #{record.status,jdbcType=CHAR},
      BAU_ENCRYPT_SALT = #{record.encryptSalt,jdbcType=VARCHAR},
      BAU_CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      BAU_OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      BAU_ACTIVATE_TIME = #{record.activateTime,jdbcType=TIMESTAMP},
      BAU_PASSWORD_MODIFY_TIME = #{record.passwordModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldsh.blog.system.model.AdminUser" >
    <!--
      WARNING - @mbggenerated
    -->
    update blog_admin_user
    <set >
      <if test="userName != null" >
        BAU_USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        BAU_PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        BAU_NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        BAU_SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        BAU_ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="dirthday != null" >
        BAU_DIRTHDAY = #{dirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        BAU_MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        BAU_MAIL = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        BAU_WECHAT = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="sketch != null" >
        BAU_SKETCH = #{sketch,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        BAU_STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="encryptSalt != null" >
        BAU_ENCRYPT_SALT = #{encryptSalt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        BAU_CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        BAU_OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activateTime != null" >
        BAU_ACTIVATE_TIME = #{activateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordModifyTime != null" >
        BAU_PASSWORD_MODIFY_TIME = #{passwordModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldsh.blog.system.model.AdminUser" >
    <!--
      WARNING - @mbggenerated
    -->
    update blog_admin_user
    set BAU_USER_NAME = #{userName,jdbcType=VARCHAR},
      BAU_PASSWORD = #{password,jdbcType=VARCHAR},
      BAU_NAME = #{name,jdbcType=VARCHAR},
      BAU_SEX = #{sex,jdbcType=CHAR},
      BAU_ADDRESS = #{address,jdbcType=VARCHAR},
      BAU_DIRTHDAY = #{dirthday,jdbcType=TIMESTAMP},
      BAU_MOBILE = #{mobile,jdbcType=VARCHAR},
      BAU_MAIL = #{mail,jdbcType=VARCHAR},
      BAU_WECHAT = #{wechat,jdbcType=VARCHAR},
      BAU_SKETCH = #{sketch,jdbcType=VARCHAR},
      BAU_STATUS = #{status,jdbcType=CHAR},
      BAU_ENCRYPT_SALT = #{encryptSalt,jdbcType=VARCHAR},
      BAU_CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      BAU_OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      BAU_ACTIVATE_TIME = #{activateTime,jdbcType=TIMESTAMP},
      BAU_PASSWORD_MODIFY_TIME = #{passwordModifyTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>